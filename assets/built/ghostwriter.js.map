{"version":3,"sources":["color-utils.js","frontpage-tabs.js","galleries.js","prism.js","prism-yaml.js","tinycolor.js"],"names":["updateColorScheme","primaryColorHex","getComputedStyle","document","documentElement","getPropertyValue","trim","primaryDarkColor","tinycolor","darken","secondaryColor","spin","secondaryDarkColor","style","setProperty","toString","loadTab","tagSlug","querySelectorAll","forEach","postList","classList","add","querySelector","remove","addEventListener","images","container","image","closest","width","attributes","value","height","flex","_self","window","WorkerGlobalScope","self","Prism","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","call","slice","objId","obj","defineProperty","clone","deepClone","visited","id","key","hasOwnProperty","v","i","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","languages","extend","redef","insertBefore","inside","before","insert","root","token","grammar","ret","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","env","selector","hooks","run","elements","apply","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","j","length","cause","flags","patternObj","lookbehind","greedy","pattern","global","RegExp","source","currentNode","next","pos","tail","reach","str","removeCount","matchPattern","from","index","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","list","array","node","push","toArray","all","name","callbacks","matchedStr","lastIndex","lookbehindLength","newNode","count","s","e","tag","classes","aliases","join","message","parse","close","readyState","script","highlightAutomaticallyCallback","hasAttribute","defer","requestAnimationFrame","setTimeout","module","exports","markup","comment","prolog","doctype","internal-subset","string","punctuation","doctype-tag","cdata","namespace","attr-value","attr-name","entity","tagName","includedCdataInside","included-cdata","def","html","mathml","svg","xml","ssml","atom","rss","css","atrule","rule","selector-function-argument","keyword","url","function","important","addInlined","style-attr","clike","class-name","boolean","number","operator","javascript","regex","regex-source","regex-flags","regex-delimiter","function-variable","parameter","constant","template-string","template-punctuation","interpolation","interpolation-punctuation","js","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","SELECTOR","logged","setLanguageClass","Element","matches","msMatchesSelector","webkitMatchesSelector","py","rb","ps1","psm1","sh","bat","h","tex","autoloader","xhr","pre","setAttribute","appendChild","createElement","getAttribute","extension","loadLanguages","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","console","warn","arguments","anchorOrAlias","properties","plainKey","createValuePattern","yaml","scalar","directive","datetime","null","yml","Math","trimLeft","trimRight","tinyCounter","mathRound","round","mathMin","min","mathMax","max","mathRandom","random","color","opts","rgb","r","g","b","a","l","ok","format","named","names","matchers","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","rgbToRgb","String","substr","convertToPercentage","floor","f","q","t","mod","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","rgbToHsl","d","rgbToHsv","rgbToHex","allow3Char","hex","pad2","charAt","rgbaToArgbHex","convertDecimalToHex","desaturate","amount","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","monochromatic","toHsv","modification","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","R","pow","G","B","setAlpha","toHsvString","toHslString","toHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","_applyModification","fn","args","concat","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","out","wcag2Parms","parms","level","size","toUpperCase","validateWCAG2Parms","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","flip","parseFloat","isNaN","n","indexOf","processPercent","parseInt","abs","val","c","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","define","amd"],"mappings":"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","file":"ghostwriter.js","sourcesContent":["function updateColorScheme() {\n  const primaryColorHex = getComputedStyle(document.documentElement).getPropertyValue('--ghost-accent-color').trim()\n  const primaryDarkColor = tinycolor(primaryColorHex).darken(10)\n  const secondaryColor = tinycolor(primaryColorHex).spin(180)\n  const secondaryDarkColor = tinycolor(primaryColorHex).spin(180).darken(10)\n  document.documentElement.style.setProperty('--color-primary-dark', primaryDarkColor.toString())\n  document.documentElement.style.setProperty('--color-secondary', secondaryColor.toString())\n  document.documentElement.style.setProperty('--color-secondary-dark', secondaryDarkColor.toString())\n}\n\ndocument.addEventListener('DOMContentLoaded', updateColorScheme)\n","// eslint-disable-next-line no-unused-vars\nfunction loadTab(tagSlug) {\n  document.querySelectorAll('.posts').forEach((postList) => postList.classList.add('hidden'))\n  document.querySelector(`#${tagSlug}-posts`).classList.remove('hidden')\n  document.querySelectorAll('.nav-item').forEach((postList) => postList.classList.remove('active'))\n  document.querySelector(`#${tagSlug}-nav-item`).classList.add('active')\n}\n","const images = document.querySelectorAll('.kg-gallery-image img')\nimages.forEach((image) => {\n  const container = image.closest('.kg-gallery-image')\n  const width = image.attributes.width.value\n  const height = image.attributes.height.value\n  const ratio = width / height\n  container.style.flex = `${ratio} 1 0%`\n})\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. `before-all-elements-highlight`\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t * the element's language.\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n\tpattern.lastIndex = pos;\n\tvar match = pattern.exec(text);\n\tif (match && lookbehind && match[1]) {\n\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\tvar lookbehindLength = match[1].length;\n\t\tmatch.index += lookbehindLength;\n\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t}\n\treturn match;\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\tvar match;\n\n\t\t\t\tif (greedy) {\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index,\n\t\t\t\t\tmatchStr = match[0],\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(from + matchStr.length);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'style': {\n\t\t\t\t\t\t\t\tpattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\talias: 'language-css',\n\t\t\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'attr-name': /^style/i\n\t\t\t\t}\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t'regex-delimiter': /^\\/|\\/$/\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar Prism = window.Prism;\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t}\n\n})();\n","(function (Prism) {\n\n\t// https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n\t// https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n\tvar anchorOrAlias = /[*&][^\\s[\\]{},]+/;\n\t// https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\tvar tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/;\n\t// https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\tvar properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|'\n\t\t+ anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)';\n\t// https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n\t// This is a simplified version that doesn't support \"#\" and multiline keys\n\t// All these long scarry character classes are simplified versions of YAML's characters\n\tvar plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source\n\t\t.replace(/<PLAIN>/g, function () { return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source; });\n\tvar string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n\n\t/**\n\t *\n\t * @param {string} value\n\t * @param {string} [flags]\n\t * @returns {RegExp}\n\t */\n\tfunction createValuePattern(value, flags) {\n\t\tflags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\t\tvar pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source\n\t\t\t.replace(/<<prop>>/g, function () { return properties; }).replace(/<<value>>/g, function () { return value; });\n\t\treturn RegExp(pattern, flags)\n\t}\n\n\tPrism.languages.yaml = {\n\t\t'scalar': {\n\t\t\tpattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source\n\t\t\t\t.replace(/<<prop>>/g, function () { return properties; })),\n\t\t\tlookbehind: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'comment': /#.*/,\n\t\t'key': {\n\t\t\tpattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n\t\t\t\t.replace(/<<prop>>/g, function () { return properties; })\n\t\t\t\t.replace(/<<key>>/g, function () { return '(?:' + plainKey + '|' + string + ')'; })),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'atrule'\n\t\t},\n\t\t'directive': {\n\t\t\tpattern: /(^[ \\t]*)%.+/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'datetime': {\n\t\t\tpattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n\t\t\tlookbehind: true,\n\t\t\talias: 'number'\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: createValuePattern(/true|false/.source, 'i'),\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'null': {\n\t\t\tpattern: createValuePattern(/null|~/.source, 'i'),\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: createValuePattern(string),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': {\n\t\t\tpattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': tag,\n\t\t'important': anchorOrAlias,\n\t\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n\t};\n\n\tPrism.languages.yml = Prism.languages.yaml;\n\n}(Prism));\n","// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n"]}